/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* twoSum(int* nums, int numsSize, int target) {
    int i, max, min;
    max = min = nums[0];
    for(i = 0; i < numsSize; i++) {
        if(nums[i] > max) max = nums[i];
        if(nums[i] < min) min = nums[i];
    }
    
    int *map   = (int*)calloc((max-min+1), sizeof(int));
    int *result = (int*)malloc(sizeof(int)*2);
    
    for(i = 0; i < numsSize; i++) {
        int lookfornum = target - nums[i];
        if(lookfornum < min || lookfornum > max) continue;
        int dis = lookfornum - min;
        if (map[dis]) {         
            result[0] = i;
            result[1] = map[dis] -1;
            break;
        }
        else{
            map[nums[i] - min] = i + 1;
        }

    }
    
    return result;
    
}